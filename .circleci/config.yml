version: 2.1

executors:
  node:
    working_directory: /tmp/int_tests
    machine:
        image: ubuntu-2004:2022.10.1
  docker:
    working_directory: /tmp/workspace
    docker:
      - image: docker:20.10.1

jobs:
    integration-tests:
        executor: node
        steps:
            - checkout
            - run:
                name: Get Configuration
                command: |
                    cp src/config/config.dev.json src/config/config.json
            - run:
                name: Install Packages
                command: |
                    source /opt/circleci/.nvm/nvm.sh
                    nvm install 16.20.0
                    echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
                    echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
                    sudo apt-get update
                    sudo apt-get install -y ca-certificates git build-essential
            - restore_cache:
                keys:
                    - node-v1-{{ checksum "package-lock.json" }}
            - run:
                name: Setup Testing Environment
                command: |
                    docker-compose up -d
                    docker-compose ps
                    docker-compose logs -t --tail="all" df2-server
                    docker ps
            - run:
                name: Wait For Server Warmup
                command: |
                    nvm alias default 16.20.0
                    nvm use 16.20.0
                    npm i --force --legacy-peer-deps -d
                    sleep 30
                    npm uninstall bcrypt --force && npm install bcrypt@3.0.6 --force --legacy-peer-deps --save --save-exact # temporary, remove this later
            - run:
                name: Run Integration Tests
                command: |
                    JEST_JUNIT_OUTPUT_NAME="test-results.xml" npm run test-int || true
            - save_cache:
                key: node-v1-{{ checksum "package-lock.json" }}
                paths:
                    - ~/.npm
            - store_test_results:
                path: test-results.xml
    publish-node-sdk:
        executor: node
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "SHA256:6uSusj536HFBXwstxow8E4ydHkjZkuoryLtQYuj9xnk"
            - checkout
            - restore_cache:
                keys:
                    - node-v1-{{ checksum "package-lock.json" }}
            - run:
                name: Install Packages
                command: |
                    source /opt/circleci/.nvm/nvm.sh
                    nvm install 16.20.0
                    echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
                    echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
                    sudo apt-get update
                    sudo apt-get install -y ca-certificates git build-essential
                    nvm alias default 16.20.0
                    nvm use 16.20.0
                    npm i --force --legacy-peer-deps -d
                    npm uninstall bcrypt --force && npm install bcrypt@3.0.6 --force --legacy-peer-deps --save --save-exact # temporary, remove this later
            - run:
                name: Build OpenAPI Manifest
                command: |
                    npm run build-openapi-spec
            - run:
                name: Generate SDK from Swagger Codegen
                command: |
                    docker run --rm -v ${PWD}:/local swaggerapi/swagger-codegen-cli-v3:3.0.71 generate -i /local/build/swagger.json -l typescript-axios --additional-properties "npmName=delfruit-swagger-cg-sdk,supportsES6=true" -o /local/build/swagger-cg-sdk
            - run:
                name: Upload SDK
                command: |
                    git clone https://github.com/IWannaCommunity/delfruit-swagger-cg-sdk-node.git ~/swagger-cg-sdk/
                    cp --verbose --force --recursive --dereference --preserve ${PWD}/build/swagger-cg-sdk/. ~/swagger-cg-sdk/
                    cd ~/swagger-cg-sdk/
                    sudo chmod +x ./git_push.sh
                    ./git_push.sh IWannaCommunity delfruit-swagger-cg-sdk-node "Automated changes from upstream."
    docker:
        parameters:
            with_publish:
                type: boolean
                default: false
        executor: docker
        steps:
            - checkout
            - setup_remote_docker:
                version: 20.10.24
            - run:
                name: Build
                command: |
                    apk add --no-cache git
                    git fetch --tags
                    docker build -t app .
            - when:
                condition: <<parameters.with_publish>>
                steps:
                    - run:
                        name: Publish Latest & Tagged
                        command: |
                            echo $CONTAINER_REGISTRY_PASS | docker login ghcr.io -u $CONTAINER_REGISTRY_USER --password-stdin
                            docker tag app $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:latest
                            docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:latest
                            docker tag app $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:$(git describe --tags --abbrev=0)
                            docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:$(git describe --tags --abbrev=0)
                    - when:
                        condition:
                            equal: [ develop, << pipeline.git.branch >> ]
                        steps:
                            - run:
                                    name: Publish Beta
                                    command: |
                                        docker tag app $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:beta 
                                        docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:beta
                    - when:
                        condition:
                            equal: [ release, << pipeline.git.branch >> ]
                        steps:
                            - run:
                                    name: Publish Stable
                                    command: |
                                        docker tag app $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:stable
                                        docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:stable
                            
workflows:
    version: 2
    cicd:
        jobs:
            - publish-node-sdk:
                name: Publish Node SDK
            - integration-tests:
                name: Integration Tests
            - docker:
                name: Build
                with_publish: false
                requires:
                    - Integration Tests
                filters:
                    branches:
                        ignore:
                            - master
                            - develop
                            - release
            - docker:
                name: Build & Publish
                with_publish: true
                requires:
                    - Integration Tests
                filters:
                    branches:
                        only:
                            - master
                            - develop
                            - release