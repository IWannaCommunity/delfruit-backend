version: 2.1

executors:
  node:
    working_directory: /tmp/int_tests
    machine:
        image: ubuntu-1604:201903-01
  docker:
    working_directory: /tmp/workspace
    docker:
      - image: docker:latest

jobs:
    integration-tests:
        executor: node
        steps:
            - checkout
            - run:
                name: Get Configuration
                command: |
                    cp src/config/config.dev.json src/config/config.json
            - run:
                name: Install Packages
                command: |
                    source /opt/circleci/.nvm/nvm.sh
                    nvm install 13
                    echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
                    echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
                    sudo apt --allow-unauthenticated --allow-insecure-repositories update
                    sudo apt --allow-unauthenticated --allow-insecure-repositories install -y ca-certificates git build-essential
            - run:
                name: Setup Testing Environment
                command: |
                    docker-compose up -d
                    docker-compose ps
                    docker-compose logs -t --tail="all" df2-server
                    docker ps
            - run:
                name: Wait For Server Warmup
                command: |
                    nvm alias default 13
                    nvm use 13
                    npm i -d
                    git clone https://github.com/vishnubob/wait-for-it
                    chmod +x ./wait-for-it/wait-for-it.sh
                    until ./wait-for-it/wait-for-it.sh localhost:4201 -t 3
                    do
                        docker-compose ps
                        docker-compose logs -t --tail="all" df2-server
                    done
            - run:
                name: Run Integration Tests
                command: |
                    npm run test-int
    docker:
        parameters:
            with_publish:
                type: boolean
                default: false
        executor: docker
        steps:
            - checkout
            - setup_remote_docker:
                version: 17.09.0-ce
            - run:
                name: Build
                command: |
                    apk add --no-cache git
                    git fetch --tags
                    docker build -t $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:latest -t $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:$(git describe) .
            - when:
                condition: <<parameters.with_publish>>
                steps:
                    - run:
                        name: Publish
                        command: |
                            echo $CONTAINER_REGISTRY_PASS | docker login ghcr.io -u $CONTAINER_REGISTRY_USER --password-stdin
                            docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:$(git describe --tags)
            - when:
                condition:
                    equal: [ master, << pipeline.git.branch >> ]
                steps:
                    - run:
                            name: Publish Latest
                            command: |
                                docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY/delfruit-backend:latest
                            
workflows:
    version: 2
    cicd:
        jobs:
            - integration-tests:
                name: Integration Tests
            - docker:
                name: Build
                with_publish: false
                requires:
                    - Integration Tests
                filters:
                    branches:
                        ignore:
                            - master
            - docker:
                name: Build & Publish
                with_publish: true
                requires:
                    - Integration Tests
                filters:
                    branches:
                        only:
                            - master